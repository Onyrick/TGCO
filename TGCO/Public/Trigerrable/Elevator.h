// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "Trigerrable.h"
#include "TGCOCharacter.h"
#include "Elevator.generated.h"

/**
*
*/
UCLASS()
class TGCO_API AElevator : public ATrigerrable
{
	GENERATED_UCLASS_BODY()

public:
	//////////////////////////////////////////////////////////////////////////////////////////////
	//Event launch when Player trigger the component.
	// Set the Player inside the AElevator
	//////////////////////////////////////////////////////////////////////////////////////////////
		virtual void OnOverlapBegin(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult & SweepResult) override;
	
	//////////////////////////////////////////////////////////////////////////////////////////////
	//Event launch when Player trigger the component.
	// Set the Player outside the AElevator
	//////////////////////////////////////////////////////////////////////////////////////////////
		virtual void OnOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex) override;

	//////////////////////////////////////////////////////////////////////////////////////////////
	//Get and Set if both Player are in AElevator to change Level
	//////////////////////////////////////////////////////////////////////////////////////////////
	bool CheckPlayersPresence();

	//////////////////////////////////////////////////////////////////////////////////////////////
	//Open the Doors of the elevator
	//////////////////////////////////////////////////////////////////////////////////////////////
	void OpenFrontDoors();

	//////////////////////////////////////////////////////////////////////////////////////////////
	//Close the AElevator's doors when both Player are inside
	//////////////////////////////////////////////////////////////////////////////////////////////
	void CloseFrontDoors();

	//////////////////////////////////////////////////////////////////////////////////////////////
	//Play a sound when AElevator's doors are closing/closed/opening
	//////////////////////////////////////////////////////////////////////////////////////////////
	void PlaySound();

	//////////////////////////////////////////////////////////////////////////////////////////////
	//Open the AElevator's doors when sound is finished and the next Level is load
	//////////////////////////////////////////////////////////////////////////////////////////////
	void OpenBackDoors();

	//////////////////////////////////////////////////////////////////////////////////////////////
	//Close the AElevator's doors when both Player are outside
	//////////////////////////////////////////////////////////////////////////////////////////////
	void CloseBackDoors();

protected:
	//bool bIsPlayerInside; //Whether the Player is in the Elevator
	
};
